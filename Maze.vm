function Maze.new 0
push constant 4
call Memory.alloc 1
pop pointer 0
push argument 0
pop this 0
push argument 1
pop this 1
push constant 31
pop this 2
push pointer 0
return
function Maze.get_grid 0
push argument 0
pop pointer 0
push this 3
return
function Maze.create_cells 3
push argument 0
pop pointer 0
push constant 0
pop local 0
push constant 10
call Array.new 1
pop this 3
label WHILE_EXP0
push local 0
push this 0
lt
not
if-goto WHILE_END0
push local 0
push this 3
add
push constant 10
call Array.new 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
pop local 0
label WHILE_EXP1
push local 0
push this 0
lt
not
if-goto WHILE_END1
push constant 0
pop local 1
label WHILE_EXP2
push local 1
push this 1
lt
not
if-goto WHILE_END2
push local 0
push this 3
add
pop pointer 1
push that 0
pop local 2
push local 1
push local 2
add
push local 0
push local 1
push constant 0
not
push constant 0
not
push constant 0
not
push constant 0
not
call Cell.new 6
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 1
push constant 1
add
pop local 1
goto WHILE_EXP2
label WHILE_END2
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP1
label WHILE_END1
push constant 0
return
function Maze.generate_maze 8
push argument 0
pop pointer 0
push pointer 0
push argument 1
call Maze.neighbors 2
pop local 0
push constant 4
call Array.new 1
pop local 1
push constant 0
push local 1
add
push constant 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 1
push local 1
add
push constant 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 2
push local 1
add
push constant 2
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 3
push local 1
add
push constant 3
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 0
pop local 3
push argument 1
call Cell.mark_as_visited 1
pop temp 0
push pointer 0
push constant 4
call Maze.get_random 2
pop local 5
push constant 0
push local 1
add
pop pointer 1
push that 0
pop local 6
push constant 0
push local 1
add
push local 5
push local 1
add
pop pointer 1
push that 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 5
push local 1
add
push local 6
pop temp 0
pop pointer 1
push temp 0
pop that 0
label WHILE_EXP0
push local 3
push constant 4
lt
not
if-goto WHILE_END0
push local 3
push local 1
add
pop pointer 1
push that 0
pop local 7
push local 7
push local 0
add
pop pointer 1
push that 0
pop local 4
push local 4
push constant 0
eq
not
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 4
call Cell.is_visited 1
pop local 2
push local 2
not
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push local 7
push constant 0
eq
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push argument 1
call Cell.clear_left_wall 1
pop temp 0
push local 4
call Cell.clear_right_wall 1
pop temp 0
label IF_FALSE2
push local 7
push constant 1
eq
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push argument 1
call Cell.clear_right_wall 1
pop temp 0
push local 4
call Cell.clear_left_wall 1
pop temp 0
label IF_FALSE3
push local 7
push constant 2
eq
if-goto IF_TRUE4
goto IF_FALSE4
label IF_TRUE4
push argument 1
call Cell.clear_top_wall 1
pop temp 0
push local 4
call Cell.clear_bottom_wall 1
pop temp 0
label IF_FALSE4
push local 7
push constant 3
eq
if-goto IF_TRUE5
goto IF_FALSE5
label IF_TRUE5
push argument 1
call Cell.clear_bottom_wall 1
pop temp 0
push local 4
call Cell.clear_top_wall 1
pop temp 0
label IF_FALSE5
push pointer 0
push local 4
call Maze.generate_maze 2
pop temp 0
label IF_FALSE1
label IF_FALSE0
push local 3
push constant 1
add
pop local 3
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Maze.neighbors 13
push argument 0
pop pointer 0
push constant 0
pop local 12
push constant 4
call Array.new 1
pop local 11
push argument 1
call Cell.get_row 1
pop local 0
push argument 1
call Cell.get_col 1
push constant 1
sub
pop local 1
push local 1
push constant 1
neg
gt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 0
push this 3
add
pop pointer 1
push that 0
pop local 8
push local 1
push local 8
add
pop pointer 1
push that 0
pop local 10
push local 10
call Cell.is_visited 1
pop local 9
push local 9
not
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push constant 0
push local 11
add
push local 10
pop temp 0
pop pointer 1
push temp 0
pop that 0
label IF_FALSE1
label IF_FALSE0
push argument 1
call Cell.get_row 1
pop local 2
push argument 1
call Cell.get_col 1
push constant 1
add
pop local 3
push local 3
push this 1
lt
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push local 2
push this 3
add
pop pointer 1
push that 0
pop local 8
push local 3
push local 8
add
pop pointer 1
push that 0
pop local 10
push local 10
call Cell.is_visited 1
pop local 9
push local 9
not
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push constant 1
push local 11
add
push local 10
pop temp 0
pop pointer 1
push temp 0
pop that 0
label IF_FALSE3
label IF_FALSE2
push argument 1
call Cell.get_row 1
push constant 1
sub
pop local 4
push argument 1
call Cell.get_col 1
pop local 5
push local 4
push constant 1
neg
gt
if-goto IF_TRUE4
goto IF_FALSE4
label IF_TRUE4
push local 4
push this 3
add
pop pointer 1
push that 0
pop local 8
push local 5
push local 8
add
pop pointer 1
push that 0
pop local 10
push local 10
call Cell.is_visited 1
pop local 9
push local 9
not
if-goto IF_TRUE5
goto IF_FALSE5
label IF_TRUE5
push constant 2
push local 11
add
push local 10
pop temp 0
pop pointer 1
push temp 0
pop that 0
label IF_FALSE5
label IF_FALSE4
push argument 1
call Cell.get_row 1
push constant 1
add
pop local 6
push argument 1
call Cell.get_col 1
pop local 7
push local 6
push this 0
lt
if-goto IF_TRUE6
goto IF_FALSE6
label IF_TRUE6
push local 6
push this 3
add
pop pointer 1
push that 0
pop local 8
push local 7
push local 8
add
pop pointer 1
push that 0
pop local 10
push local 10
call Cell.is_visited 1
pop local 9
push local 9
not
if-goto IF_TRUE7
goto IF_FALSE7
label IF_TRUE7
push constant 3
push local 11
add
push local 10
pop temp 0
pop pointer 1
push temp 0
pop that 0
label IF_FALSE7
label IF_FALSE6
push local 11
return
function Maze.get_cell 1
push argument 0
pop pointer 0
push argument 1
push this 3
add
pop pointer 1
push that 0
pop local 0
push argument 2
push local 0
add
pop pointer 1
push that 0
return
function Maze.get_random 1
push argument 0
pop pointer 0
push this 2
push constant 31
call Math.multiply 2
pop local 0
push local 0
push constant 1
add
pop this 2
push local 0
push constant 0
lt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 0
neg
pop local 0
label IF_FALSE0
push pointer 0
push local 0
push argument 1
call Maze.modulo 3
pop local 0
push local 0
return
function Maze.modulo 1
push argument 0
pop pointer 0
push constant 0
pop local 0
label WHILE_EXP0
push local 0
push argument 1
lt
not
if-goto WHILE_END0
push local 0
push argument 2
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push local 0
push argument 1
sub
pop argument 1
push argument 1
return
function Maze.dispose 0
push argument 0
pop pointer 0
push pointer 0
call Memory.deAlloc 1
pop temp 0
push constant 0
return
